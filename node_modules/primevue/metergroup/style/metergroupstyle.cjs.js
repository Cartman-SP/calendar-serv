'use strict';

var BaseStyle = require('primevue/base/style');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var BaseStyle__default = /*#__PURE__*/_interopDefaultLegacy(BaseStyle);

var css = "\n@layer primevue {\n    .p-metergroup {\n        position: relative;\n        overflow: hidden;\n    }\n\n    .p-metergroup-vertical.p-metergroup {\n        display: flex;\n    }\n\n    .p-metergroup-vertical .p-metergroup-meter-container {\n        flex-direction: column;\n    }\n\n    .p-metergroup-meter-container {\n        display: flex;\n    }\n\n    .p-metergroup-label-list {\n        display: flex;\n        margin: 0;\n        padding: 0;\n        list-style-type: none;\n    }\n\n    .p-metergroup-vertical .p-metergroup-label-list {\n        align-items: start;\n    }\n\n    .p-metergroup-horizontal .p-metergroup-label-list-vertical {\n        flex-direction: column;\n    }\n\n    .p-metergroup-vertical .p-metergroup-label-list-horizontal {\n        flex-direction: column;\n    }\n\n    .p-metergroup-label-list-item {\n        display: inline-flex;\n        align-items: center;\n    }\n\n    .p-metergroup-label-type {\n        display: inline-block;\n    }\n}\n";
var classes = {
  root: function root(_ref) {
    var props = _ref.props;
    return ['p-metergroup p-component', {
      'p-metergroup-horizontal': props.orientation === 'horizontal',
      'p-metergroup-vertical': props.orientation === 'vertical'
    }];
  },
  metercontainer: 'p-metergroup-meter-container',
  meter: 'p-metergroup-meter',
  labellist: function labellist(_ref2) {
    var props = _ref2.props;
    return ['p-metergroup-label-list', {
      'p-metergroup-label-list-start': props.labelPosition === 'start',
      'p-metergroup-label-list-end': props.labelPosition === 'end',
      'p-metergroup-label-list-vertical': props.labelOrientation === 'vertical',
      'p-metergroup-label-list-horizontal': props.labelOrientation === 'horizontal'
    }];
  },
  labellistitem: 'p-metergroup-label-list-item',
  labelicon: 'p-metergroup-label-icon',
  labellisttype: 'p-metergroup-label-type',
  label: 'p-metergroup-label'
};
var MeterGroupStyle = BaseStyle__default["default"].extend({
  name: 'metergroup',
  css: css,
  classes: classes
});

module.exports = MeterGroupStyle;
